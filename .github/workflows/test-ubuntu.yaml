name: Ubuntu

on:
  push:
    branches:
      - feature/convert-to-cmake-build-system

env:
  CMAKE_BUILD_TYPE: Debug
  CTEST_OUTPUT_ON_FAILURE: 1
  INSTALL_LOCATION: .local

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-18.04, ubuntu-latest]
        OOMPH_ENABLE_MPI: [0]
        include:
          - os: ubuntu-18.04
            compiler: gcc
            install-deps: |
              sudo apt-get install -y gfortran openmpi-bin

          - os: ubuntu-latest
            compiler: gcc
            install-deps: |
              sudo apt-get install -y gfortran openmpi-bin libopenmpi-dev

    runs-on: ${{ matrix.os }}

    steps:
      - name: Install dependencies
        run: ${{ matrix.install-deps }}

      - name: Install CMake
        run: |
          # Install CMake 3.16
          curl -sSL https://github.com/Kitware/CMake/releases/download/v3.16.0/cmake-3.16.0-Linux-x86_64.tar.gz -o cmake.tar.gz
          sudo tar xf cmake.tar.gz --strip 1 -C /usr/local

      - name: Install OpenMPI [Not working yet!]
        if: ( runner.os == 'Linux' ) && ( matrix.OOMPH_ENABLE_MPI == 1 )
        run: |
          # Install OpenMPI 4.0.3
          wget https://download.open-mpi.org/release/open-mpi/v4.0/openmpi-4.0.3.tar.gz
          tar -xvf openmpi-4.0.3.tar.gz
          cd openmpi-4.0.3
          ./configure --prefix=/usr/local
          make all
          sudo make install
          sudo ldconfig

      - name: Output CMake version
        run: cmake --version

      - name: Check out code
        uses: actions/checkout@v2

      - name: Configure (${{ env.CMAKE_BUILD_TYPE }})
        run: |
          cmake -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
          -DOOMPH_ENABLE_MPI=${{ matrix.OOMPH_ENABLE_MPI }} \
          -DCMAKE_INSTALL_PREFIX=$GITHUB_WORKSPACE/$INSTALL_LOCATION \
          -B build

      - name: Build & install
        working-directory: build
        run: |
          make --jobs 16
          make install

      - name: Run self-tests
        id: self_tests
        run: |
          cd demo_drivers
          cmake -DCMAKE_PREFIX_PATH=$GITHUB_WORKSPACE/$INSTALL_LOCATION -B build
          cd build
          ctest -C ${{ env.CMAKE_BUILD_TYPE }} -j 8 --timeout 10000
        continue-on-error: true

      - name: Get failed test info.
        if: steps.self_tests.outcome == 'failure'
        run: |
          ctest -C ${{ env.CMAKE_BUILD_TYPE }} -j 8 --timeout 10000 --rerun-failed --output-on-failure
