name: macOS

on: push

env:
  CMAKE_BUILD_TYPE: Release
  CTEST_OUTPUT_ON_FAILURE: 1
  INSTALL_LOCATION: '${{ github.workspace }}/.local'
  OOMPH_ENABLE_MPI: 0

jobs:
  build:
    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install cmake open-mpi && brew reinstall gfortran

      - name: Get latest CMake and Ninja
        uses: PuneetMatharu/get-cmake@latest

      - name: Output CMake version
        run: cmake --version

      - name: Configure (${{ env.CMAKE_BUILD_TYPE }})
        run: |
          cmake -G Ninja \
          -DCMAKE_BUILD_TYPE=${{ env.CMAKE_BUILD_TYPE }} \
          -DOOMPH_ENABLE_MPI=${{ env.OOMPH_ENABLE_MPI }} \
          -DCMAKE_INSTALL_PREFIX=${{ env.INSTALL_LOCATION }} \
          -DOOMPH_ENABLE_PARANOID=OFF \
          -DOOMPH_ENABLE_RANGE_CHECKING=OFF \
          -B build

      - name: Build & install
        working-directory: build
        run: ninja && ninja install

      - name: Run self-tests
        id: self_tests
        run: |
          cd demo_drivers
          cmake -DCMAKE_PREFIX_PATH=${{ env.INSTALL_LOCATION }} -B build
          cd build
          ctest -C ${{ env.CMAKE_BUILD_TYPE }} -j $(sysctl -n hw.logicalcpu) --timeout 10000 --no-label-summary
        continue-on-error: true

      - name: Upload validation log file
        uses: actions/upload-artifact@v2
        with:
          name: validation-${{ runner.os }}-MPI_${{ env.OOMPH_ENABLE_MPI }}.log
          path: ./validation.log

      - name: Propagate status
        if: steps.self_tests.outcome == 'failure'
        run: exit 8
