--- # ------------------------------------------------------------------------------
name: macOS

# TODO: Possibly add on-push-paths triggers below to only trigger self-tests when .c, .h, .cc,
# .cmake, .py, .sh, CMakeLists.txt and workflow files are pushed
on: push

# Environment variables that can be read during jobs
env:
  CTEST_OUTPUT_ON_FAILURE: 1
  OOMPH_INSTALL_PATH: "${{ github.workspace }}/.local"
  CC: clang
  CXX: clang++

# ------------------------------------------------------------------------------

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        # NOTE: The main options are: [
        #   {mpi_status: "OFF", preset: CI-build},
        #   {mpi_status: "ON",  preset: CI-mpi-build}]
        build_info: [{ mpi_status: "OFF", cmake_preset: CI-build }]

    runs-on: macos-latest
    steps:
      - name: Check out repository
        uses: actions/checkout@v2

      - name: Install dependencies
        run: brew install cmake ninja openblas fd && brew reinstall gcc

      - name: Install MPI dependencies (if required)
        if: matrix.build_info.mpi_status == 'ON'
        run: brew install open-mpi

      - name: Configure
        run: cmake --preset ${{ matrix.build_info.cmake_preset }} --install-prefix ${{ env.OOMPH_INSTALL_PATH }} -B build
        env:
          # Where to look to find the Homebrew-installed OpenBLAS libraries
          CMAKE_PREFIX_PATH: "/usr/local/Cellar/openblas/0.3.21"

      - name: Build
        run: cmake --build build

      - name: Install
        run: cmake --install build

      - name: Configure self-tests
        run: cmake -S demo_drivers -B demo_drivers/build
        env:
          # Tell the demo drivers where to find the installed oomph-lib library
          CMAKE_PREFIX_PATH: ${{ env.OOMPH_INSTALL_PATH }}

      - name: Run self-tests
        id: self_tests
        run: ctest --test-dir demo_drivers/build -j $(sysctl -n hw.logicalcpu) -R gzip --output-on-failure
        continue-on-error: true

      - name: Upload validation log file
        uses: actions/upload-artifact@v2
        with:
          name: validation-${{ runner.os }}-MPI_${{ matrix.build_info.mpi_status }}.log
          path: ./validation.log

      - name: Propagate CTest mpi_status
        if: steps.self_tests.outcome == 'failure'
        run: exit 8
# ------------------------------------------------------------------------------
