From 57903380c87687354d44181942341186a661978d Mon Sep 17 00:00:00 2001
From: Puneet Matharu <puneet.matharu@hotmail.co.uk>
Date: Tue, 13 Dec 2022 21:52:41 +0000
Subject: [PATCH] Rename BUILD_TESTING -> CGAL_BUILD_TESTING.

---
 .../test/Arrangement_on_surface_2/cgal_test.cmake  | 14 +++++++-------
 CMakeLists.txt                                     | 10 +++++-----
 .../test/Circular_kernel_2/CMakeLists.txt          |  2 +-
 Installation/CMakeLists.txt                        |  6 +++---
 .../CGAL_CreateSingleSourceCGALProgram.cmake       |  2 +-
 Installation/cmake/modules/CGAL_add_test.cmake     |  4 ++--
 Installation/test/Installation/CMakeLists.txt      |  2 +-
 .../test/Installation/cgal_test_with_cmake         |  2 +-
 .../CMakeCache.txt                                 |  2 +-
 .../CMakeCache.txt                                 |  2 +-
 .../CMakeCache.txt                                 |  2 +-
 .../CMakeCache.txt                                 |  2 +-
 .../CMakeCache.txt                                 |  2 +-
 .../SKIPCMakeCache.txt                             |  2 +-
 Mesh_3/test/Mesh_3/CMakeLists.txt                  |  4 ++--
 Nef_3/test/Nef_3/CMakeLists.txt                    |  2 +-
 .../test/Polygon_mesh_processing/CMakeLists.txt    |  2 +-
 .../Plugins/Classification/CMakeLists.txt          |  2 +-
 .../Polyhedron/Plugins/Convex_hull/CMakeLists.txt  |  2 +-
 .../demo/Polyhedron/Plugins/PCA/CMakeLists.txt     |  2 +-
 .../demo/Polyhedron/Plugins/PMP/CMakeLists.txt     |  4 ++--
 .../Polyhedron/Plugins/Surface_mesh/CMakeLists.txt |  4 ++--
 .../Surface_mesh_deformation/CMakeLists.txt        |  2 +-
 .../demo/Polyhedron/polyhedron_demo_macros.cmake   |  2 +-
 Scripts/developer_scripts/run_testsuite_with_ctest |  6 +++---
 .../test/Snap_rounding_2/CMakeLists.txt            |  2 +-
 .../test/Surface_sweep_2/CMakeLists.txt            |  2 +-
 .../test/Triangulation_2/CMakeLists.txt            |  2 +-
 .../examples/Triangulation_3/CMakeLists.txt        |  2 +-
 .../test/Triangulation_3/CMakeLists.txt            |  4 ++--
 30 files changed, 49 insertions(+), 49 deletions(-)

diff --git a/Arrangement_on_surface_2/test/Arrangement_on_surface_2/cgal_test.cmake b/Arrangement_on_surface_2/test/Arrangement_on_surface_2/cgal_test.cmake
index 898b96445..7a714b75b 100644
--- a/Arrangement_on_surface_2/test/Arrangement_on_surface_2/cgal_test.cmake
+++ b/Arrangement_on_surface_2/test/Arrangement_on_surface_2/cgal_test.cmake
@@ -160,16 +160,16 @@ function(cgal_arr_2_add_target exe_name source_file)
   target_compile_options(${name} PRIVATE ${flags})
   cgal_debug_message(STATUS "#      -> target ${name} with TESTSUITE_CXXFLAGS: ${flags}")
 
-  if(BUILD_TESTING)
+  if(CGAL_BUILD_TESTING)
     cgal_add_compilation_test(${name})
-  endif(BUILD_TESTING)
+  endif(CGAL_BUILD_TESTING)
 
   # Add a compatibility-mode with the shell script `cgal_test_base`
   if(NOT TARGET ${exe_name})
     create_single_source_cgal_program( "${source_file}" NO_TESTING)
-    if(BUILD_TESTING)
+    if(CGAL_BUILD_TESTING)
       cgal_add_compilation_test(${exe_name})
-    endif(BUILD_TESTING)
+    endif(CGAL_BUILD_TESTING)
   endif()
 endfunction()
 
@@ -182,7 +182,7 @@ endfunction()
 function(run_test_with_flags)
   # ${ARGV0} - executable name
   # ${ARGV1} - test substring name
-  if(NOT BUILD_TESTING)
+  if(NOT CGAL_BUILD_TESTING)
     return()
   endif()
   cgal_debug_message(STATUS "# run_test_with_flags(${ARGN})")
@@ -190,7 +190,7 @@ function(run_test_with_flags)
 endfunction()
 
 function(run_test_alt name datafile)
-  if(NOT BUILD_TESTING)
+  if(NOT CGAL_BUILD_TESTING)
     return()
   endif()
   if(suffix)
@@ -214,7 +214,7 @@ function(compile_and_run)
   cgal_debug_message(STATUS "# compile_and_run(${ARGN})")
 #  message("   successful compilation of ${name}")
   cgal_arr_2_add_target(${name} ${name}.cpp)
-  if(BUILD_TESTING)
+  if(CGAL_BUILD_TESTING)
     cgal_add_test(${name})
   endif()
 endfunction()
diff --git a/CMakeLists.txt b/CMakeLists.txt
index bf5136386..ada3f4a8d 100644
--- a/CMakeLists.txt
+++ b/CMakeLists.txt
@@ -45,14 +45,14 @@ option(
 
 message("== CMake setup (DONE) ==\n")
 
-# Enable testing with BUILD_TESTING
-option(BUILD_TESTING "Build the testing tree." OFF)
-if(BUILD_TESTING AND NOT POLICY CMP0064)
+# Enable testing with CGAL_BUILD_TESTING
+option(CGAL_BUILD_TESTING "Build the testing tree." OFF)
+if(CGAL_BUILD_TESTING AND NOT POLICY CMP0064)
   message(
     FATAL_ERROR "CGAL support of CTest requires CMake version 3.4 or later.
-The variable BUILD_TESTING must be set of OFF.")
+The variable CGAL_BUILD_TESTING must be set of OFF.")
 endif()
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   enable_testing()
 endif()
 
diff --git a/Circular_kernel_2/test/Circular_kernel_2/CMakeLists.txt b/Circular_kernel_2/test/Circular_kernel_2/CMakeLists.txt
index c271340b2..fd239a5ff 100644
--- a/Circular_kernel_2/test/Circular_kernel_2/CMakeLists.txt
+++ b/Circular_kernel_2/test/Circular_kernel_2/CMakeLists.txt
@@ -22,7 +22,7 @@ create_single_source_cgal_program("test_Line_arc.cpp")
 create_single_source_cgal_program("test_Circular_kernel_basic.cpp")
 create_single_source_cgal_program("test_Exact_circular_kernel_basic.cpp")
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_tests_properties(
     execution___of__test_Circular_kernel_basic
     execution___of__test_Exact_circular_kernel_basic
diff --git a/Installation/CMakeLists.txt b/Installation/CMakeLists.txt
index 28ee5079f..cecf66bd9 100644
--- a/Installation/CMakeLists.txt
+++ b/Installation/CMakeLists.txt
@@ -108,9 +108,9 @@ else(CGAL_BRANCH_BUILD)
       "${CGAL_SOURCE_DIR}"
       CACHE INTERNAL "Directory containing the GraphicsView package")
 
-  # Enable testing with BUILD_TESTING
-  option(BUILD_TESTING "Build the testing tree." OFF)
-  if(BUILD_TESTING)
+  # Enable testing with CGAL_BUILD_TESTING
+  option(CGAL_BUILD_TESTING "Build the testing tree." OFF)
+  if(CGAL_BUILD_TESTING)
     enable_testing()
   endif()
 endif(CGAL_BRANCH_BUILD)
diff --git a/Installation/cmake/modules/CGAL_CreateSingleSourceCGALProgram.cmake b/Installation/cmake/modules/CGAL_CreateSingleSourceCGALProgram.cmake
index 1eb308fbe..1e4c20fec 100644
--- a/Installation/cmake/modules/CGAL_CreateSingleSourceCGALProgram.cmake
+++ b/Installation/cmake/modules/CGAL_CreateSingleSourceCGALProgram.cmake
@@ -53,7 +53,7 @@ function(create_single_source_cgal_program firstfile )
 
     get_directory_property(folder_NO_TESTING CGAL_NO_TESTING)
 
-    if(folder_NO_TESTING OR NOT BUILD_TESTING)
+    if(folder_NO_TESTING OR NOT CGAL_BUILD_TESTING)
       set(NO_TESTING TRUE)
     endif()
 
diff --git a/Installation/cmake/modules/CGAL_add_test.cmake b/Installation/cmake/modules/CGAL_add_test.cmake
index 282b161ac..2232c6bc8 100644
--- a/Installation/cmake/modules/CGAL_add_test.cmake
+++ b/Installation/cmake/modules/CGAL_add_test.cmake
@@ -3,9 +3,9 @@ if(CGAL_add_test_included)
 endif(CGAL_add_test_included)
 set(CGAL_add_test_included TRUE)
 
-option(BUILD_TESTING "Build the testing tree." OFF)
+option(CGAL_BUILD_TESTING "Build the testing tree." OFF)
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   enable_testing()
 endif()
 
diff --git a/Installation/test/Installation/CMakeLists.txt b/Installation/test/Installation/CMakeLists.txt
index 2560f75d5..dc7eeb1bd 100644
--- a/Installation/test/Installation/CMakeLists.txt
+++ b/Installation/test/Installation/CMakeLists.txt
@@ -43,7 +43,7 @@ create_single_source_cgal_program("deprecation_warning.cpp")
 create_single_source_cgal_program("test_use_h.cpp")
 
 create_single_source_cgal_program(will_fail.cpp will_fail_aux.cpp)
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_property(TEST execution___of__will_fail PROPERTY WILL_FAIL TRUE)
 endif()
 
diff --git a/Installation/test/Installation/cgal_test_with_cmake b/Installation/test/Installation/cgal_test_with_cmake
index 728cf75d3..c65eaddc6 100755
--- a/Installation/test/Installation/cgal_test_with_cmake
+++ b/Installation/test/Installation/cgal_test_with_cmake
@@ -27,7 +27,7 @@ echo "Configuring... "
 mkdir build_dir
 cd build_dir
 if eval 'cmake --no-warn-unused-cli ${INIT_FILE:+"-C${INIT_FILE}"} -DRUNNING_CGAL_AUTO_TEST=TRUE  \
-                                   -DCGAL_DIR="$CGAL_RELEASE_DIR" -DBUILD_TESTING=ON -DWITH_tests=ON \
+                                   -DCGAL_DIR="$CGAL_RELEASE_DIR" -DCGAL_BUILD_TESTING=ON -DWITH_tests=ON \
                                    ..' ; then
 
   echo "   successful configuration" >> ../$ERRORFILE
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Debug-64bits/CMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Debug-64bits/CMakeCache.txt
index e77fc712f..8a8de6ab2 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Debug-64bits/CMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Debug-64bits/CMakeCache.txt
@@ -18,7 +18,7 @@
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Boost atomic library (debug)
 Boost_ATOMIC_LIBRARY_DEBUG:FILEPATH=C:/3rdPartyLibs/boost/boost_1_57_0/lib64_msvc12/boost_atomic-vc120-mt-gd-1_57.lib
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Release-64bits/CMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Release-64bits/CMakeCache.txt
index 1a0be3886..6ff357792 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Release-64bits/CMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2013-Release-64bits/CMakeCache.txt
@@ -21,7 +21,7 @@ BUILD_DOC:BOOL=OFF
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Boost atomic library (debug)
 Boost_ATOMIC_LIBRARY_DEBUG:FILEPATH=C:/3rdPartyLibs/boost/boost_1_57_0/lib64_msvc12/boost_atomic-vc120-mt-gd-1_57.lib
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Debug-64bits/CMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Debug-64bits/CMakeCache.txt
index 00c8f5f5e..facd23a51 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Debug-64bits/CMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Debug-64bits/CMakeCache.txt
@@ -18,7 +18,7 @@
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Activate the debug messages of the script FindBoost
 Boost_DEBUG:BOOL=OFF
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Release-64bits/CMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Release-64bits/CMakeCache.txt
index 5ed672ef9..b352ece95 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Release-64bits/CMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2015-Release-64bits/CMakeCache.txt
@@ -18,7 +18,7 @@
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Activate the debug messages of the script FindBoost
 Boost_DEBUG:BOOL=OFF
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits-extra_flags/CMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits-extra_flags/CMakeCache.txt
index b5eeeeacc..ee4fa1c11 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits-extra_flags/CMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits-extra_flags/CMakeCache.txt
@@ -18,7 +18,7 @@
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Activate the debug messages of the script FindBoost
 Boost_DEBUG:BOOL=OFF
diff --git a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits/SKIPCMakeCache.txt b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits/SKIPCMakeCache.txt
index d45f35ab5..4bd8055a1 100644
--- a/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits/SKIPCMakeCache.txt
+++ b/Maintenance/infrastructure/gauguin.geometryfactory.com/reference_platforms/x64_Cygwin-Windows10_MSVC2017-Release-64bits/SKIPCMakeCache.txt
@@ -18,7 +18,7 @@
 BUILD_SHARED_LIBS:BOOL=ON
 
 //Build the testing tree.
-BUILD_TESTING:BOOL=OFF
+CGAL_BUILD_TESTING:BOOL=OFF
 
 //Activate the debug messages of the script FindBoost
 Boost_DEBUG:BOOL=OFF
diff --git a/Mesh_3/test/Mesh_3/CMakeLists.txt b/Mesh_3/test/Mesh_3/CMakeLists.txt
index 40643d753..3ff6674a9 100644
--- a/Mesh_3/test/Mesh_3/CMakeLists.txt
+++ b/Mesh_3/test/Mesh_3/CMakeLists.txt
@@ -116,7 +116,7 @@ if ( CGAL_FOUND )
       endif()
     endforeach()
 
-    if(BUILD_TESTING)
+    if(CGAL_BUILD_TESTING)
       set_property(TEST
         execution___of__test_meshing_verbose
         execution___of__test_meshing_polyhedron_with_features
@@ -144,7 +144,7 @@ if ( CGAL_FOUND )
     target_compile_definitions(test_meshing_verbose PRIVATE CGAL_MESH_3_USE_INTEL_ITT)
   endif()
 
-  if(BUILD_TESTING)
+  if(CGAL_BUILD_TESTING)
     set_tests_properties(
       execution___of__test_meshing_polyhedron_with_features
       execution___of__test_meshing_verbose
diff --git a/Nef_3/test/Nef_3/CMakeLists.txt b/Nef_3/test/Nef_3/CMakeLists.txt
index cb2d07847..59fdcb1d7 100644
--- a/Nef_3/test/Nef_3/CMakeLists.txt
+++ b/Nef_3/test/Nef_3/CMakeLists.txt
@@ -17,7 +17,7 @@ foreach(cppfile ${cppfiles})
   create_single_source_cgal_program("${cppfile}")
 endforeach()
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_tests_properties(
     execution___of__Nef_3_problematic_construction
     execution___of__test_nef_3_io_Cartesian
diff --git a/Polygon_mesh_processing/test/Polygon_mesh_processing/CMakeLists.txt b/Polygon_mesh_processing/test/Polygon_mesh_processing/CMakeLists.txt
index 3574c6e9a..209ffc161 100644
--- a/Polygon_mesh_processing/test/Polygon_mesh_processing/CMakeLists.txt
+++ b/Polygon_mesh_processing/test/Polygon_mesh_processing/CMakeLists.txt
@@ -146,7 +146,7 @@ if(TARGET CGAL::Ceres_support AND TARGET CGAL::Eigen3_support)
 #  target_link_libraries( test_pmp_repair_self_intersections PRIVATE ceres )
 endif(TARGET CGAL::Ceres_support AND TARGET CGAL::Eigen3_support)
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_tests_properties(
     execution___of__triangulate_hole_Polyhedron_3_no_delaunay_test
     execution___of__triangulate_hole_Polyhedron_3_test
diff --git a/Polyhedron/demo/Polyhedron/Plugins/Classification/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/Classification/CMakeLists.txt
index a44ae7fd8..77f977f11 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/Classification/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/Classification/CMakeLists.txt
@@ -47,7 +47,7 @@ if(TARGET CGAL::Eigen3_support)
     scene_color_ramp
     CGAL::Eigen3_support)
 
-    if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+    if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
       set_tests_properties(
         compilation_of__classification_plugin
         PROPERTIES RESOURCE_LOCK Selection_test_resources)
diff --git a/Polyhedron/demo/Polyhedron/Plugins/Convex_hull/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/Convex_hull/CMakeLists.txt
index 3c923aab3..99fb11bd2 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/Convex_hull/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/Convex_hull/CMakeLists.txt
@@ -10,7 +10,7 @@ polyhedron_demo_plugin(kernel_plugin Kernel_plugin)
 target_link_libraries(kernel_plugin PUBLIC scene_surface_mesh_item)
 
 
-if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
   set_tests_properties(
     compilation_of__convex_hull_plugin
     PROPERTIES RESOURCE_LOCK Selection_test_resources)
diff --git a/Polyhedron/demo/Polyhedron/Plugins/PCA/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/PCA/CMakeLists.txt
index 4171347a6..c6681f3e3 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/PCA/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/PCA/CMakeLists.txt
@@ -38,7 +38,7 @@ target_link_libraries(
   PUBLIC scene_surface_mesh_item scene_points_with_normal_item
          scene_polylines_item)
 
-     if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+     if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
        set_tests_properties(
          compilation_of__create_obb_mesh_plugin
          PROPERTIES RESOURCE_LOCK Selection_test_resources)
diff --git a/Polyhedron/demo/Polyhedron/Plugins/PMP/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/PMP/CMakeLists.txt
index 53cfdc9b8..253fe8828 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/PMP/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/PMP/CMakeLists.txt
@@ -53,7 +53,7 @@ if(TARGET CGAL::Eigen3_support)
         PURPOSE "Can be used as a solver in the smoothing plugin.")
         target_link_libraries(extrude_plugin PUBLIC CGAL::Eigen3_support)
 
-        if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+        if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
           set_tests_properties(
             compilation_of__extrude_plugin
             compilation_of__fairing_plugin
@@ -165,7 +165,7 @@ target_link_libraries(
   engrave_text_plugin PUBLIC scene_surface_mesh_item scene_selection_item
                              scene_polylines_item)
 
-if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
   set_tests_properties(
     compilation_of__join_and_split_plugin
     compilation_of__selection_plugin
diff --git a/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh/CMakeLists.txt
index 682998322..02549e972 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh/CMakeLists.txt
@@ -16,7 +16,7 @@ if(NOT CGAL_DISABLE_GMP)
       parameterization_plugin PUBLIC scene_surface_mesh_item scene_textured_item
                                      scene_selection_item CGAL::Eigen3_support)
 
-    if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+    if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
       set_tests_properties(
         compilation_of__parameterization_plugin
         PROPERTIES RESOURCE_LOCK Selection_test_resources)
@@ -34,7 +34,7 @@ if(NOT CGAL_DISABLE_GMP)
                          ${segmentationUI_FILES})
   target_link_libraries(mesh_segmentation_plugin PUBLIC scene_surface_mesh_item)
 
-  if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+  if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
     set_tests_properties(
       compilation_of__mesh_segmentation_plugin
       PROPERTIES RESOURCE_LOCK Selection_test_resources)
diff --git a/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh_deformation/CMakeLists.txt b/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh_deformation/CMakeLists.txt
index 0954a8c13..472fbeb9c 100644
--- a/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh_deformation/CMakeLists.txt
+++ b/Polyhedron/demo/Polyhedron/Plugins/Surface_mesh_deformation/CMakeLists.txt
@@ -5,7 +5,7 @@ if(EIGEN3_FOUND AND "${EIGEN3_VERSION}" VERSION_GREATER "3.1.90")
   target_link_libraries(edit_plugin PUBLIC scene_surface_mesh_item
                                            scene_edit_item scene_selection_item)
 
-  if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+  if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
     set_tests_properties(
       compilation_of__edit_plugin
       PROPERTIES RESOURCE_LOCK Selection_test_resources)
diff --git a/Polyhedron/demo/Polyhedron/polyhedron_demo_macros.cmake b/Polyhedron/demo/Polyhedron/polyhedron_demo_macros.cmake
index 4a027c1c7..35dcbd594 100644
--- a/Polyhedron/demo/Polyhedron/polyhedron_demo_macros.cmake
+++ b/Polyhedron/demo/Polyhedron/polyhedron_demo_macros.cmake
@@ -35,7 +35,7 @@ include(${CGAL_MODULES_DIR}/CGAL_add_test.cmake)
     if(TARGET demo_framework)
       target_link_libraries( ${plugin_name} PUBLIC demo_framework)
       add_dependencies(${plugin_name} demo_framework)
-      if(BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
+      if(CGAL_BUILD_TESTING AND NOT CMAKE_VS_MSBUILD_COMMAND)
         if(NOT TARGET compilation_of__demo_framework)
               # This custom target is useless. It is used only as a flag to
               # detect that the test has already been created.
diff --git a/Scripts/developer_scripts/run_testsuite_with_ctest b/Scripts/developer_scripts/run_testsuite_with_ctest
index 631195ac9..47629f8a9 100644
--- a/Scripts/developer_scripts/run_testsuite_with_ctest
+++ b/Scripts/developer_scripts/run_testsuite_with_ctest
@@ -267,16 +267,16 @@ run_test_on_platform()
   if [ ! -f "${INIT_FILE}" ]; then
     echo "error NEED A INIT FILE !"
   fi
-  cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DBUILD_TESTING=ON -DWITH_tests=ON -DCGAL_TEST_SUITE=ON $CGAL_DIR>installation.log 2>&1
+  cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DCGAL_BUILD_TESTING=ON -DWITH_tests=ON -DCGAL_TEST_SUITE=ON $CGAL_DIR>installation.log 2>&1
   rm CMakeCache.txt
   CMAKE_OPTS="-DCGAL_TEST_SUITE=ON -DCMAKE_VERBOSE_MAKEFILE=ON -DWITH_tests=ON"
   if [ -n "${SCRIPTS_DIR}" ]; then
     CMAKE_OPTS="${CMAKE_OPTS} -DWITH_examples=ON -DWITH_demos=ON"
   fi
   if [ -z "${SHOW_PROGRESS}" ]; then
-    cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DBUILD_TESTING=ON ${CMAKE_OPTS} $CGAL_DIR  >package_installation.log 2>&1
+    cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DCGAL_BUILD_TESTING=ON ${CMAKE_OPTS} $CGAL_DIR  >package_installation.log 2>&1
   else
-    cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DBUILD_TESTING=ON ${CMAKE_OPTS} $CGAL_DIR 2>&1 |tee package_installation.log
+    cmake ${INIT_FILE:+"-C${INIT_FILE}"} -DCGAL_BUILD_TESTING=ON ${CMAKE_OPTS} $CGAL_DIR 2>&1 |tee package_installation.log
   fi
   LIST_TEST_FILE="${CGAL_HOME}/list_test_packages"
   if [ -f ${LIST_TEST_FILE} ]; then
diff --git a/Snap_rounding_2/test/Snap_rounding_2/CMakeLists.txt b/Snap_rounding_2/test/Snap_rounding_2/CMakeLists.txt
index 467b45ee8..50ee1ccd6 100644
--- a/Snap_rounding_2/test/Snap_rounding_2/CMakeLists.txt
+++ b/Snap_rounding_2/test/Snap_rounding_2/CMakeLists.txt
@@ -35,7 +35,7 @@ function(add_Snap_rounding_tests name)
   endforeach()
 endfunction(add_Snap_rounding_tests)
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   cgal_add_compilation_test(test_snap_rounding_2)
   add_snap_rounding_tests(test_snap_rounding_2)
 endif()
diff --git a/Surface_sweep_2/test/Surface_sweep_2/CMakeLists.txt b/Surface_sweep_2/test/Surface_sweep_2/CMakeLists.txt
index da5748057..949e18c84 100644
--- a/Surface_sweep_2/test/Surface_sweep_2/CMakeLists.txt
+++ b/Surface_sweep_2/test/Surface_sweep_2/CMakeLists.txt
@@ -31,7 +31,7 @@ endfunction()
 
 function(compile_and_run_sweep name source_file point_location traits data_set)
   compile(${ARGV})
-  if(NOT BUILD_TESTING)
+  if(NOT CGAL_BUILD_TESTING)
     return()
   endif()
   cgal_add_compilation_test(${name})
diff --git a/Triangulation_2/test/Triangulation_2/CMakeLists.txt b/Triangulation_2/test/Triangulation_2/CMakeLists.txt
index bad1f2455..cdcef949f 100644
--- a/Triangulation_2/test/Triangulation_2/CMakeLists.txt
+++ b/Triangulation_2/test/Triangulation_2/CMakeLists.txt
@@ -17,7 +17,7 @@ foreach(cppfile ${cppfiles})
   create_single_source_cgal_program("${cppfile}")
 endforeach()
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_tests_properties(
     execution___of__test_constrained_triangulation_2
     execution___of__test_delaunay_triangulation_2
diff --git a/Triangulation_3/examples/Triangulation_3/CMakeLists.txt b/Triangulation_3/examples/Triangulation_3/CMakeLists.txt
index 94b035fc9..1cea69b12 100644
--- a/Triangulation_3/examples/Triangulation_3/CMakeLists.txt
+++ b/Triangulation_3/examples/Triangulation_3/CMakeLists.txt
@@ -41,7 +41,7 @@ if(TARGET CGAL::TBB_support)
                         PUBLIC CGAL::TBB_support)
   target_link_libraries(sequential_parallel PUBLIC CGAL::TBB_support)
 
-  if(BUILD_TESTING)
+  if(CGAL_BUILD_TESTING)
     set_property(TEST
       execution___of__parallel_insertion_and_removal_in_regular_3
       execution___of__parallel_insertion_in_delaunay_3
diff --git a/Triangulation_3/test/Triangulation_3/CMakeLists.txt b/Triangulation_3/test/Triangulation_3/CMakeLists.txt
index a820549bf..4e54a1be8 100644
--- a/Triangulation_3/test/Triangulation_3/CMakeLists.txt
+++ b/Triangulation_3/test/Triangulation_3/CMakeLists.txt
@@ -35,7 +35,7 @@ if(TARGET CGAL::TBB_support)
                  test_regular_insert_range_with_info)
     target_link_libraries(${target} PUBLIC CGAL::TBB_support)
   endforeach()
-  if(BUILD_TESTING)
+  if(CGAL_BUILD_TESTING)
     set_property(TEST
       execution___of__test_delaunay_3
       execution___of__test_regular_3
@@ -44,7 +44,7 @@ if(TARGET CGAL::TBB_support)
   endif()
 endif()
 
-if(BUILD_TESTING)
+if(CGAL_BUILD_TESTING)
   set_tests_properties(
     execution___of__test_delaunay_hierarchy_3
     execution___of__test_delaunay_hierarchy_3_old
-- 
2.38.1

