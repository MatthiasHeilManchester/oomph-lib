From d054a324c68f2c2d2f21ef085942191e4ca9367c Mon Sep 17 00:00:00 2001
From: Puneet Matharu <puneet.matharu@hotmail.co.uk>
Date: Mon, 31 May 2021 20:43:51 +0100
Subject: [PATCH] Patch of MUMPS used to patch Scalapack dependency.

---
 ...l-in-pcswap-file-missing-from-target.patch |  26 +++++
 cmake/scalapack.cmake                         | 107 ++++++++++++------
 2 files changed, 96 insertions(+), 37 deletions(-)
 create mode 100644 cmake/patches/0001-Patch-of-Scalapack-to-fill-in-pcswap-file-missing-from-target.patch

diff --git a/cmake/patches/0001-Patch-of-Scalapack-to-fill-in-pcswap-file-missing-from-target.patch b/cmake/patches/0001-Patch-of-Scalapack-to-fill-in-pcswap-file-missing-from-target.patch
new file mode 100644
index 0000000..43cf3d2
--- /dev/null
+++ b/cmake/patches/0001-Patch-of-Scalapack-to-fill-in-pcswap-file-missing-from-target.patch
@@ -0,0 +1,26 @@
+From b70f8de8da267862e919815bd03ca94c62f0c783 Mon Sep 17 00:00:00 2001
+From: Puneet Matharu <puneet.matharu@hotmail.co.uk>
+Date: Mon, 31 May 2021 20:30:41 +0100
+Subject: [PATCH] Patch of CMakeLists.txt to fill in missing pcswap file from
+ Level 1 PBLAS targets.
+
+---
+ PBLAS/SRC/CMakeLists.txt | 2 +-
+ 1 file changed, 1 insertion(+), 1 deletion(-)
+
+diff --git a/PBLAS/SRC/CMakeLists.txt b/PBLAS/SRC/CMakeLists.txt
+index 6d031bc..cc67f17 100644
+--- a/PBLAS/SRC/CMakeLists.txt
++++ b/PBLAS/SRC/CMakeLists.txt
+@@ -14,7 +14,7 @@ list(APPEND blas1 psswap_.c psscal_.c pscopy_.c psaxpy_.c psdot_.c psnrm2_.c psa
+ endif()
+ 
+ if("c" IN_LIST arith)
+-list(APPEND blas1 pcscal_.c pcsscal_.c pccopy_.c pcaxpy_.c pcdotu_.c pcdotc_.c pscnrm2_.c pscasum_.c pcamax_.c)
++list(APPEND blas1 pcswap_.c pcscal_.c pcsscal_.c pccopy_.c pcaxpy_.c pcdotu_.c pcdotc_.c pscnrm2_.c pscasum_.c pcamax_.c)
+ endif()
+ 
+ if("d" IN_LIST arith)
+-- 
+2.31.1
+
diff --git a/cmake/scalapack.cmake b/cmake/scalapack.cmake
index b67d8ab..1ea0400 100644
--- a/cmake/scalapack.cmake
+++ b/cmake/scalapack.cmake
@@ -1,53 +1,86 @@
 # Finds Scalapack, tests, and if not found or broken, autobuild scalapack
 include(ExternalProject)
 
-if(intsize64)
-  if(MKL IN_LIST SCALAPACK_COMPONENTS)
+if (intsize64)
+  if (MKL IN_LIST SCALAPACK_COMPONENTS)
     list(APPEND SCALAPACK_COMPONENTS MKL64)
-  else()
-    if(NOT (OpenMPI IN_LIST SCALAPACK_COMPONENTS
-        OR MPICH IN_LIST SCALAPACK_COMPONENTS
-        OR MKL IN_LIST SCALAPACK_COMPONENTS))
-      if(DEFINED ENV{MKLROOT})
-        list(APPEND SCALAPACK_COMPONENTS MKL MKL64)
-      endif()
-    endif()
-  endif()
-endif()
-
-if(NOT scalapack_external)
-  if(autobuild)
+  else ()
+    if (NOT
+        (OpenMPI IN_LIST SCALAPACK_COMPONENTS
+         OR MPICH IN_LIST SCALAPACK_COMPONENTS
+         OR MKL IN_LIST SCALAPACK_COMPONENTS)
+    )
+      if (DEFINED ENV{MKLROOT})
+        list(
+          APPEND
+          SCALAPACK_COMPONENTS
+          MKL
+          MKL64
+        )
+      endif ()
+    endif ()
+  endif ()
+endif ()
+
+if (NOT scalapack_external)
+  if (autobuild)
     find_package(SCALAPACK COMPONENTS ${SCALAPACK_COMPONENTS})
-  else()
+  else ()
     find_package(SCALAPACK REQUIRED COMPONENTS ${SCALAPACK_COMPONENTS})
-  endif()
-endif()
+  endif ()
+endif ()
 
-if(SCALAPACK_FOUND OR TARGET SCALAPACK::SCALAPACK)
+if (SCALAPACK_FOUND OR TARGET SCALAPACK::SCALAPACK)
   return()
-endif()
-
+endif ()
 
-set(scalapack_external true CACHE BOOL "build ScaLapack")
+set(scalapack_external
+    true
+    CACHE BOOL "build ScaLapack"
+)
 
-if(NOT DEFINED SCALAPACK_ROOT)
+if (NOT DEFINED SCALAPACK_ROOT)
   set(SCALAPACK_ROOT ${CMAKE_INSTALL_PREFIX})
-endif()
+endif ()
 
 set(SCALAPACK_LIBRARIES
-${SCALAPACK_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}scalapack${CMAKE_STATIC_LIBRARY_SUFFIX}
-${SCALAPACK_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}blacs${CMAKE_STATIC_LIBRARY_SUFFIX})
-
-
-ExternalProject_Add(SCALAPACK
-GIT_REPOSITORY ${scalapack_git}
-GIT_TAG ${scalapack_tag}
-UPDATE_DISCONNECTED ${EP_UPDATE_DISCONNECTED}
-CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${SCALAPACK_ROOT} -DLAPACK_ROOT:PATH=${LAPACK_ROOT} -DBUILD_SHARED_LIBS:BOOL=false -DCMAKE_BUILD_TYPE=Release -DBUILD_TESTING:BOOL=false
-CMAKE_CACHE_ARGS -Darith:STRING=${arith}
-BUILD_BYPRODUCTS ${SCALAPACK_LIBRARIES}
-INACTIVITY_TIMEOUT 30
-CONFIGURE_HANDLED_BY_BUILD ON
+    ${SCALAPACK_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}scalapack${CMAKE_STATIC_LIBRARY_SUFFIX}
+    ${SCALAPACK_ROOT}/lib/${CMAKE_STATIC_LIBRARY_PREFIX}blacs${CMAKE_STATIC_LIBRARY_SUFFIX}
+)
+
+# The patch file and how to apply it
+set(PATCH_FILE
+    0001-Patch-of-Scalapack-to-fill-in-pcswap-file-missing-from-target.patch
+)
+set(PATCH_COMMAND
+    ${CMAKE_COMMAND} -E copy_if_different
+    ${CMAKE_CURRENT_LIST_DIR}/patches/${PATCH_FILE} <SOURCE_DIR> && git
+    checkout <SOURCE_DIR>/PBLAS/SRC/CMakeLists.txt && git apply
+    <SOURCE_DIR>/${PATCH_FILE}
+)
+
+set(CMAKE_C_FLAGS
+    "${CMAKE_C_FLAGS} -Wno-macro-redefined -Wno-implicit-function-declaration"
+)
+ExternalProject_Add(
+  SCALAPACK
+  GIT_REPOSITORY ${scalapack_git}
+  GIT_TAG ${scalapack_tag}
+  UPDATE_DISCONNECTED ${EP_UPDATE_DISCONNECTED}
+  CMAKE_ARGS -DCMAKE_INSTALL_PREFIX:PATH=${SCALAPACK_ROOT}
+             -DLAPACK_ROOT:PATH=${LAPACK_ROOT}
+             -DBUILD_SHARED_LIBS:BOOL=false
+             -DCMAKE_BUILD_TYPE=Release
+             -DBUILD_TESTING:BOOL=false
+             -DCMAKE_C_FLAGS=${CMAKE_C_FLAGS}
+  CMAKE_CACHE_ARGS -Darith:STRING=${arith}
+  PATCH_COMMAND ${PATCH_COMMAND}
+  BUILD_BYPRODUCTS
+    ${SCALAPACK_LIBRARIES}
+    INACTIVITY_TIMEOUT
+    30
+    CONFIGURE_HANDLED_BY_BUILD
+    ON
 )
 
 add_library(SCALAPACK::SCALAPACK INTERFACE IMPORTED)
-- 
2.31.1

