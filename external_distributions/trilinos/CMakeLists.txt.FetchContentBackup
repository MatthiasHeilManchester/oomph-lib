# ==============================================================================
# Build the Trilinos library
# ==============================================================================
list(APPEND CMAKE_MESSAGE_INDENT " ")
message(STATUS "Entered trilinos subdirectory")

# ------------------------------------------------------------------------------
# NOTE: There is an issue with the CMakeLists.txt file in the master branch of
# the Trilinos project which limits us from using the latest release (i.e.
# Release 13.0.1 as of 31/05/21). This has been patched; see PRs here:
# https://github.com/trilinos/Trilinos/issues/8177 and here:
# https://github.com/trilinos/Trilinos/pull/8184 for details. We're not cloning
# the master branch (where this fix has been applied) because this forces us to
# use C++14. Instead, we'll just patch the commits.
# ------------------------------------------------------------------------------

# cmake-format: off
# TODO: Update Trilinos generic code to use new Trilinos functionality.
# The patch file and how to apply it
# set(PATCH_FILE 0001-Patch-of-CMakeLists.txt-for-FetchContents.patch).
# Patch above is for the latest version of Trilinos.
#
# Patch below is for Trilinos 11.8.1.
set(PATCH_FILE 0001-Patch-of-CMakeLists.txt-for-oomph-lib-export.patch)
set(PATCH_COMMAND ${CMAKE_COMMAND} -E copy_if_different ${CMAKE_CURRENT_SOURCE_DIR}/patches/${PATCH_FILE} <SOURCE_DIR>
    && git checkout <SOURCE_DIR>/CMakeLists.txt
    && git apply <SOURCE_DIR>/${PATCH_FILE})
# cmake-format: on

# FIXME: Attempt to install Trilinos using FetchContent again but using the
# instructions here: https://github.com/trilinos/Trilinos/issues/8177, which
# require the patches provided here or a very recent version of Trilinos (from
# the 'develop' branch containing the same patched changes!).

# cmake-format: off
# TODO: USE EXAMPLE CODE BELOW!

# include(FetchContent)

# FetchContent_Declare(
#   Trilinos
#   GIT_REPOSITORY https://github.com/trilinos/Trilinos.git
#   GIT_TAG        origin/develop
#   GIT_SHALLOW 1
# )
# FetchContent_MakeAvailable(Trilinos)

# add_library(mylib INTERFACE)
# target_include_directories(mylib INTERFACE "$<BUILD_INTERFACE:${CMAKE_CURRENT_SOURCE_DIR};${Trilinos_INCLUDE_DIRS};${Trilinos_TPL_INCLUDE_DIRS}>"
# )
# target_link_libraries(mylib INTERFACE ${Trilinos_LIBRARIES} ${Trilinos_TPL_LIBRARIES})

# add_executable(myapp myapp.cpp)
# target_link_libraries(myapp mylib)
# cmake-format: on

# Specify build options
set(CMAKE_INSTALL_PREFIX "${CMAKE_CURRENT_BINARY_DIR}/trilinos_install")
set(Trilinos_SET_GROUP_AND_PERMISSIONS_ON_INSTALL_BASE_DIR
    ${CMAKE_INSTALL_PREFIX})
set(BUILD_SHARED_LIBS ${BUILD_SHARED_LIBS})
set(CMAKE_BUILD_TYPE ${CMAKE_BUILD_TYPE})
set(CMAKE_VERBOSE_MAKEFILE OFF)
set(CMAKE_C_COMPILER ${CMAKE_C_COMPILER})
set(CMAKE_CXX_COMPILER ${CMAKE_CXX_COMPILER})
set(CMAKE_Fortran_COMPILER ${CMAKE_Fortran_COMPILER})
set(CMAKE_C_FLAGS "${CMAKE_C_FLAGS}")
set(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS}")
set(CMAKE_Fortran_FLAGS "${CMAKE_Fortran_FLAGS}")
set(TPL_ENABLE_MPI ${OOMPH_ENABLE_MPI})
set(TPL_ENABLE_BLAS ON)
set(TPL_ENABLE_LAPACK ON)
set(TPL_ENABLE_Netcdf OFF)
set(Trilinos_ENABLE_TESTS OFF)
set(Trilinos_ENABLE_EXAMPLES OFF)
set(Trilinos_ENABLE_ALL_PACKAGES OFF)
set(Trilinos_ENABLE_ALL_OPTIONAL_PACKAGES OFF)
set(Trilinos_ENABLE_Amesos ON)
set(Trilinos_ENABLE_Anasazi ON)
set(Trilinos_ENABLE_AztecOO ON)
set(Trilinos_ENABLE_Epetra ON)
set(Trilinos_ENABLE_EpetraExt ON)
set(Trilinos_ENABLE_Ifpack ON)
set(Trilinos_ENABLE_Kokkos OFF)
set(Trilinos_ENABLE_ML ON)
set(Trilinos_ENABLE_Teuchos ON)
set(Trilinos_ENABLE_Triutils ON)

# Specify the locations of the BLAS and LAPACK library artifacts
#
# NOTE: This doesn't work because the generator expressions are only evaluated
# at build-time and FetchContent requires them at build time... Can I build it
# without specifying our own blas and lapack libraries?
set(TPL_BLAS_LIBRARIES "$<TARGET_LINKER_FILE:oomph_blas>")
set(TPL_LAPACK_LIBRARIES "$<TARGET_LINKER_FILE:oomph_lapack>")

# Download Trilinos
include(FetchContent)
FetchContent_Declare(
  oomph_trilinos_project
  INSTALL_DIR "${TRILINOS_INSTALL_DIR}"
  URL "${CMAKE_CURRENT_LIST_DIR}/trilinos-11.8.1-Source.tar.gz"
  PATCH_COMMAND ${PATCH_COMMAND}
  GIT_PROGRESS TRUE
  GIT_SHALLOW TRUE)
FetchContent_MakeAvailable(oomph_trilinos_project)

# ------------------------------------------------------------------------------
# BOILERPLATE: Update global variables

# Update external distributions preprocessor definitions and make the updated
# variable values visible to the parent scope
list(APPEND EXTERNAL_DIST_CXX_DEFINITIONS OOMPH_HAS_TRILINOS)
set(EXTERNAL_DIST_CXX_DEFINITIONS ${EXTERNAL_DIST_CXX_DEFINITIONS} PARENT_SCOPE)

message(VERBOSE "Leaving trilinos subdirectory")
# ------------------------------------------------------------------------------
